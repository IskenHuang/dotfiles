# find shorthand
function f() {
    find . -name "$1"
}

# Start an HTTP server from a directory, optionally specifying the port
function server() {
	local port="${1:-9000}"
	local ip="$(ifconfig en0 | grep inet | grep -v inet6 | awk '{print $2}')"
	open "http://${ip}:${port}/"

	local ispy3="$(checkCmdOne python3)"
	if [[ $ispy3 == "true" ]]; then
		python3 -m http.server "$port"
	else
		# Set the default Content-Type to `text/plain` instead of `application/octet-stream`
		# And serve everything as UTF-8 (although not technically correct, this doesnâ€™t break anything for binary files)
		if [[ $port == "80" ]]; then
			sudo python -c $'import SimpleHTTPServer;\nmap = SimpleHTTPServer.SimpleHTTPRequestHandler.extensions_map;\nmap[""] = "text/plain";\nfor key, value in map.items():\n\tmap[key] = value + ";charset=UTF-8";\nSimpleHTTPServer.test();' "$port"
		else
			python -c $'import SimpleHTTPServer;\nmap = SimpleHTTPServer.SimpleHTTPRequestHandler.extensions_map;\nmap[""] = "text/plain";\nfor key, value in map.items():\n\tmap[key] = value + ";charset=UTF-8";\nSimpleHTTPServer.test();' "$port"
		fi
	fi
}


# get gzipped size
function gz() {
	echo "orig size    (bytes): "
	cat "$1" | wc -c
	echo "gzipped size (bytes): "
	gzip -c "$1" | wc -c
}

# All the dig info
function digga() {
	dig +nocmd "$1" any +multiline +noall +answer
}

function scanRemote() {
	echo "Scan start - ${1} | regexp:: ${2}"
	# -A "UA HERE"
	curl -v --silent $1 2>&1 | grep -E $2 | wc -l
	echo "Scan finished"
}

function checkFile() {
	for FILE in ${@}
	do
		if [[ ! -f $FILE ]]; then
			echo "The file ${FILE} does not exist!"
		fi
	done
}

function checkFileOne() {
	if [[ ${#$(checkFile $1)} > 0 ]]; then
		echo "false"
	else
		echo "true"
	fi
}

function checkCmd() {
	for CMD in ${@}
	do
		if [ ! command -v $CMD &> /dev/null ]; then
			echo "$CMD" not found
		fi
	done
}


function checkCmdOne() {
	local k="$(checkCmd $1)"
	if [[ $k == "" ]]; then
		echo "true"
	else
		echo "false"
	fi
}

function isMac() {
	local _MAC_VERSION="$(sw_vers -productName 2> /dev/null)"
	if [[ $_MAC_VERSION == "" ]]; then
		echo "false"
	else
		echo "true"
	fi
}

function isWork() {
	local IS_WORK=$(echo $(hostname) $HOST $USER | grep -E "work|bytedance")
	if [[ ${#IS_WORK} > 0 ]]; then
		echo "true"
	else
		echo "false"
	fi
}
